input {
	udp {
		port => 9000
		type => "syslog"
	}
}

filter {
	if [type] == "syslog" {
		grok {
			match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} %{DATA:syslog_program}: Alert Level: %{NONNEGINT:alert_level}; Rule: %{NONNEGINT:Rule} - %{DATA:Description}; Location: \(%{DATA:reporting_host}\) %{DATA:reporting_ip}\-\>%{DATA:reporting_source}; (user: %{USER:User};%{SPACE})?(srcip: %{IP:Src_IP};%{SPACE})?(user: %{USER:User};%{SPACE})?(dstip: %{IP:Dst_IP};%{SPACE})?(src_port: %{NONNEGINT:Src_Port};%{SPACE})?(dst_port: %{NONNEGINT:Dst_Port};%{SPACE})?%{GREEDYDATA:Details}" }
			add_field => [ "ossec_server", "%{host}" ]
		}
		geoip {
			source => "Src_IP"
        }
		mutate {
			convert      => [ "alert_level", "integer"]
			remove_field => [ "syslog_hostname", "syslog_message", "syslog_pid", "message", "@version", "host" ]
			replace => [ "type", "OSSEC" ]
		}
	}
}

output {
	elasticsearch {
		hosts => [ "logs.example.com" ]
		template_overwrite => true
		user => "logs"
		password => "Password1"
	}
}


